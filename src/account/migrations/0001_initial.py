# Generated by Django 5.1.6 on 2025-03-01 14:08

import account.managers
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
                ('full_name', models.CharField(max_length=255, verbose_name='Nombre completo')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Correo electrónico')),
                ('password', models.CharField(max_length=128, verbose_name='Contraseña')),
                ('is_active', models.BooleanField(default=True, verbose_name='¿Activo?')),
                ('is_staff', models.BooleanField(default=False, help_text='Designa si el usuario puede acceder al sitio de administración.', verbose_name='¿Es staff?')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designa si el usuario tiene todos los permisos sin asignarlos explícitamente.', verbose_name='¿Es superusuario?')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'ordering': ['-created_at'],
                'permissions': [('view_user', 'Ver usuario'), ('add_user', 'Agregar usuario'), ('update_user', 'Actualizar usuario'), ('delete_user', 'Eliminar usuario')],
                'default_permissions': [],
            },
            managers=[
                ('objects', account.managers.UserManager()),
            ],
        ),
    ]
